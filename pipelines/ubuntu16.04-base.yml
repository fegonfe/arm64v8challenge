pool:
  name: Hosted Ubuntu 1604
steps:
- bash: |
   # Install QEMU on host agent
   sudo apt-get update
   sudo apt-get install -y qemu qemu-user-static qemu-user binfmt-support
   
   # copy to sourcedir       
   cp /usr/bin/qemu-aarch64-static $sourcedir

  displayName: 'Install QEMU'
  env:
    sourcedir: $(Build.SourcesDirectory)/ubuntu16.04/base

- task: Docker@2
  displayName: 'Run privileged container'
  inputs:
    command: run
    arguments: '--rm --privileged multiarch/qemu-user-static:register --reset'
  enabled: false

- task: Docker@2
  displayName: 'build and push'
  inputs:
    # uses service connection created in step 5
    containerRegistry: 'acr-serviceconnection'
    repository: arm64v8/base
    Dockerfile: ubuntu16.04/base/Dockerfile
    tags: |
     1.0.$(Build.BuildId)-xenial
     latest

- task: AzureKeyVault@1
  displayName: 'Azure Key Vault: Get Credentials'
  inputs:
    # uses service connection created in step 5
    azureSubscription: 'arm-serviceconnection'
    KeyVaultName: arm64v8KeyVault

- task: AzureIoTEdge@2
  displayName: 'Azure IoT Edge - Generate deployment manifest'
  inputs:
    action: 'Generate deployment manifest'
    templateFilePath: deploy/deployment.template.json
    defaultPlatform: arm64v8
  env:
    CONTAINER_REGISTRY_USERNAME: $(iot-device-user)
    CONTAINER_REGISTRY_PASSWORD: $(iot-device-pwd)
    CONTAINER_REGISTRY: $(DOCKER_REGISTRY_NAME)
    MODULE_NAME: arm64v8base
    IMAGE: arm64v8/base:latest

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/config/deployment.json'